rownames(tmp) <- paste0(rownames(tmp), "_", i)
data[[i]] <- data.frame(tmp)
}
pairs <- combn(1:length(data), 2)
pairwise_diffs <- data.frame(matrix(nrow = ncol(pairs), ncol = 2 + nrow(data[[1]])))
for (i in 1:ncol(pairs)) {
dat_taxa_species <- bind_rows(data[[pairs[1,i]]], data[[pairs[2,i]]])
dat_taxa_species[is.na(dat_taxa_species)] <- 0
distances <- vegdist(dat_taxa_species, method="bray") %>% as.matrix(labels=TRUE)
output <- vector()
for (colname in unique(gsub(pattern="_.*", "", colnames(distances)))) {
same_ids <- colnames(distances)[grepl(colname, colnames(distances))]
output <- append(output, distances[same_ids[1], same_ids[2]])
}
pairwise_diffs[i,] <- c("Method 1"=pairs[1,i], "Method 2"=pairs[2,i], output)
}
pairwise_diffs$Pair <- paste0(case_when(pairwise_diffs[,1]==1 ~ "MPA2",
pairwise_diffs[,1]==2 ~ "MPA3",
pairwise_diffs[,1]==3 ~ "MPA4",
pairwise_diffs[,1]==4 ~ "metaxa2",
pairwise_diffs[,1]==5 ~ "mOTUs3",
pairwise_diffs[,1]==6 ~ "Assembly"),
"/",
case_when(pairwise_diffs[,2]==1 ~ "MPA2",
pairwise_diffs[,2]==2 ~ "MPA3",
pairwise_diffs[,2]==3 ~ "MPA4",
pairwise_diffs[,2]==4 ~ "metaxa2",
pairwise_diffs[,2]==5 ~ "mOTUs3",
pairwise_diffs[,2]==6 ~ "Assembly"))
pairwise_diffs[,1:2] <- NULL
bray_df <- melt(pairwise_diffs, id.vars = "Pair")
bray_df$Method <- gsub("\\/.*","",bray_df$Pair)
# Reformat Bray Curtis matrix
# Swap study for plotting
study <- case_when(dataset=="TaraPolar" ~ "Artic ocean",
dataset=="Mine" ~ "Acid mine runoff",
dataset=="Trees" ~ "North American forest soils",
dataset=="Coastal" ~ "Baltic Coastal Sediment",
dataset=="Gators" ~ "Gator nest soil",
dataset=="All" ~ "All Datasets")
level_name <- case_when(level == 1 ~ "kingdoms",
level == 2 ~ "phyla",
level == 3 ~ "classes",
level == 4 ~ "orders",
level == 5 ~ "families",
level == 6 ~ "genera",
level == 7 ~ "species")
# Plot
ggp3 <- ggplot(data = bray_df, aes(x=Pair, y=value)) +
geom_boxplot(outlier.shape = NA) + geom_jitter(size = 0.1) +
ggtitle(study) + theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
ylab("Bray-Curtis Dissimilarity") +
ylim(0, 1)
figure <- ggarrange(
ggarrange(ggp3, ggp2, ncol = 2, labels = c("A", "B")),
ggp1,
nrow = 2,
heights = c(3,1),
labels = c("", "C")       # Label of the line plot
)
figure
dir.create(file.path("Figures/HerchelSmith/"), showWarnings = FALSE)
ggsave(plot = figure, filename = "Figures/HerchelSmith/HerchelSmith_Figure.png", width=24, height=20, units = 'cm', dpi=1000)
}
runAll <- function() {
make_all_database_effect()
print("Done Database Effect")
make_all_unknownECDF_plots()
print("Done ECDF")
make_all_brayCurtisNormalizedBoxplots()
make_all_brayCurtisBoxplots()
make_all_brayCurtisSharedBoxplots()
print("Done BC")
make_all_PCoAs()
print("Done PCoA")
make_all_overlapVsReads()
print("Done OverlapVsReads")
make_all_taxaCalled_plots()
print("Done TaxaCalled")
make_all_ReadsVsBins()
print("Done Reads vs bins")
make_all_brayVsReads()
make_all_brayNormVsReads()
print("Done Bray vs reads")
#make_all_PERMANOVA()
#print("Done PERMANOVA")
}
runAll()
getwd()
install.packages("bio3d", dependencies=TRUE)
pdb <- read.pdb( "4q21" )
library(bio3d)
pdb <- read.pdb( "4q21" )
pdb
pdb$xyz
# Get distances between alpha carbons
tmp <- dm(pdb,inds="calpha")
tmp
filled.contour(tmp, nlevels = 10)
library(bio3d)
# Download structure
pdb <- read.pdb( "3k35" )
# Get distances between alpha carbons
tmp <- dm(pdb,inds="calpha")
http://qiime.org/scripts/pick_otus.html
library("phyloseq")
data(esophagus)
UniFrac(esophagus, weighted=TRUE, normalized=TRUE, parallel=FALSE, fast=TRUE)
esophagus
esophagus@otu_table
library(dplyr)
library(stringr)
library(data.table)
library(ggplot2)
# Read metadata
metadata <- read.csv("metadata/metadata_parsed_100.tsv", sep = "\t", check.names = F, header = T)
# Read encodings
encodings <- read.csv("metadata/encodings_100.tsv", sep = "\t", header = T)
figure <- ggplot(data = metadata, aes(x=(eval(parse(text = "date")) %>% gsub(pattern = "-.*", replacement = "") %>% as.numeric()))) +
geom_histogram(binwidth = 1) +
theme_bw() +
xlab("Date")
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = "Figures/metadata/date.png", width=18, height=12, units = 'cm', dpi=300)
for (column in encodings$name[encodings$encoding=="cont" & !is.na(encodings$encoding)]) {
options(scipen=3)
figure <- ggplot(data = metadata, aes(x=(eval(parse(text = column))))) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$",column)))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", column, ".png"), width=18, height=12, units = 'cm', dpi=300)
}
for (column in encodings$name[encodings$encoding=="contbin" & !is.na(encodings$encoding)]) {
figure <- ggplot(data = metadata[(eval(parse(text = paste0("metadata$`",column, "`"))))!=0,], aes(x=(eval(parse(text = paste0("metadata$`",column, "`"))))[(eval(parse(text = paste0("metadata$`",column, "`"))))!=0])) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
", Proportion Zero: ",
format(round(mean(eval(parse(text = paste0("metadata$`",column, "`")))==0, na.rm = T), 3), nsmall = 3),
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$`",column, "`")))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", gsub(" \\(.*", "", column), ".png"), width=18, height=12, units = 'cm', dpi=300)
}
for (column in encodings$name[encodings$encoding=="bicontbin" & !is.na(encodings$encoding)]) {
xy <- str_split(metadata[,column][metadata[,column]!="0" & !is.na(metadata[,column])], " , ", simplify = TRUE)
xy <- data.frame(matrix(as.numeric(xy), ncol = ncol(xy)))
colnames(xy) <- c("Concentration", "Value")
figure <- ggplot(data = xy, aes(x=Concentration)) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
" concentration, Proportion Zero: ",
format(round(mean(eval(parse(text = paste0("metadata$`",column, "`")))==0, na.rm = T), 3), nsmall = 3),
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$`",column, "`")))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", gsub(" \\(.*", "", column), "_concentration.png"), width=18, height=12, units = 'cm', dpi=300)
figure <- ggplot(data = xy, aes(x=Value)) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
" value, Proportion Zero: ",
format(round(mean(eval(parse(text = paste0("metadata$`",column, "`")))==0, na.rm = T), 3), nsmall = 3),
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$`",column, "`")))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", gsub(" \\(.*", "", column), "_value.png"), width=18, height=12, units = 'cm', dpi=300)
}
pwd()
getwd()
setwd("C:/Users/willn/Documents/Other/Crystallization Prediction")
library(dplyr)
library(stringr)
library(data.table)
library(ggplot2)
# Read metadata
metadata <- read.csv("metadata/metadata_parsed_100.tsv", sep = "\t", check.names = F, header = T)
# Read encodings
encodings <- read.csv("metadata/encodings_100.tsv", sep = "\t", header = T)
figure <- ggplot(data = metadata, aes(x=(eval(parse(text = "date")) %>% gsub(pattern = "-.*", replacement = "") %>% as.numeric()))) +
geom_histogram(binwidth = 1) +
theme_bw() +
xlab("Date")
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = "Figures/metadata/date.png", width=18, height=12, units = 'cm', dpi=300)
for (column in encodings$name[encodings$encoding=="cont" & !is.na(encodings$encoding)]) {
options(scipen=3)
figure <- ggplot(data = metadata, aes(x=(eval(parse(text = column))))) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$",column)))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", column, ".png"), width=18, height=12, units = 'cm', dpi=300)
}
for (column in encodings$name[encodings$encoding=="contbin" & !is.na(encodings$encoding)]) {
figure <- ggplot(data = metadata[(eval(parse(text = paste0("metadata$`",column, "`"))))!=0,], aes(x=(eval(parse(text = paste0("metadata$`",column, "`"))))[(eval(parse(text = paste0("metadata$`",column, "`"))))!=0])) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
", Proportion Zero: ",
format(round(mean(eval(parse(text = paste0("metadata$`",column, "`")))==0, na.rm = T), 3), nsmall = 3),
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$`",column, "`")))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", gsub(" \\(.*", "", column), ".png"), width=18, height=12, units = 'cm', dpi=300)
}
for (column in encodings$name[encodings$encoding=="bicontbin" & !is.na(encodings$encoding)]) {
xy <- str_split(metadata[,column][metadata[,column]!="0" & !is.na(metadata[,column])], " , ", simplify = TRUE)
xy <- data.frame(matrix(as.numeric(xy), ncol = ncol(xy)))
colnames(xy) <- c("Concentration", "Value")
figure <- ggplot(data = xy, aes(x=Concentration)) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
" concentration, Proportion Zero: ",
format(round(mean(eval(parse(text = paste0("metadata$`",column, "`")))==0, na.rm = T), 3), nsmall = 3),
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$`",column, "`")))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", gsub(" \\(.*", "", column), "_concentration.png"), width=18, height=12, units = 'cm', dpi=300)
figure <- ggplot(data = xy, aes(x=Value)) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
" value, Proportion Zero: ",
format(round(mean(eval(parse(text = paste0("metadata$`",column, "`")))==0, na.rm = T), 3), nsmall = 3),
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$`",column, "`")))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", gsub(" \\(.*", "", column), "_value.png"), width=18, height=12, units = 'cm', dpi=300)
}
getwd()
setwd("C:/Users/willn/Documents/GitHub/cryst")
library(dplyr)
library(stringr)
library(data.table)
library(ggplot2)
# Read metadata
metadata <- read.csv("metadata/metadata_parsed_100.tsv", sep = "\t", check.names = F, header = T)
# Read encodings
encodings <- read.csv("metadata/encodings_100.tsv", sep = "\t", header = T)
figure <- ggplot(data = metadata, aes(x=(eval(parse(text = "date")) %>% gsub(pattern = "-.*", replacement = "") %>% as.numeric()))) +
geom_histogram(binwidth = 1) +
theme_bw() +
xlab("Date")
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = "Figures/metadata/date.png", width=18, height=12, units = 'cm', dpi=300)
for (column in encodings$name[encodings$encoding=="cont" & !is.na(encodings$encoding)]) {
options(scipen=3)
figure <- ggplot(data = metadata, aes(x=(eval(parse(text = column))))) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$",column)))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", column, ".png"), width=18, height=12, units = 'cm', dpi=300)
}
for (column in encodings$name[encodings$encoding=="contbin" & !is.na(encodings$encoding)]) {
figure <- ggplot(data = metadata[(eval(parse(text = paste0("metadata$`",column, "`"))))!=0,], aes(x=(eval(parse(text = paste0("metadata$`",column, "`"))))[(eval(parse(text = paste0("metadata$`",column, "`"))))!=0])) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
", Proportion Zero: ",
format(round(mean(eval(parse(text = paste0("metadata$`",column, "`")))==0, na.rm = T), 3), nsmall = 3),
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$`",column, "`")))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", gsub(" \\(.*", "", column), ".png"), width=18, height=12, units = 'cm', dpi=300)
}
for (column in encodings$name[encodings$encoding=="bicontbin" & !is.na(encodings$encoding)]) {
xy <- str_split(metadata[,column][metadata[,column]!="0" & !is.na(metadata[,column])], " , ", simplify = TRUE)
xy <- data.frame(matrix(as.numeric(xy), ncol = ncol(xy)))
colnames(xy) <- c("Concentration", "Value")
figure <- ggplot(data = xy, aes(x=Concentration)) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
" concentration, Proportion Zero: ",
format(round(mean(eval(parse(text = paste0("metadata$`",column, "`")))==0, na.rm = T), 3), nsmall = 3),
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$`",column, "`")))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", gsub(" \\(.*", "", column), "_concentration.png"), width=18, height=12, units = 'cm', dpi=300)
figure <- ggplot(data = xy, aes(x=Value)) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
" value, Proportion Zero: ",
format(round(mean(eval(parse(text = paste0("metadata$`",column, "`")))==0, na.rm = T), 3), nsmall = 3),
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$`",column, "`")))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", gsub(" \\(.*", "", column), "_value.png"), width=18, height=12, units = 'cm', dpi=300)
}
library(dplyr)
library(stringr)
library(data.table)
library(ggplot2)
# Read metadata
metadata <- read.csv("metadata/metadata_parsed_100.tsv", sep = "\t", check.names = F, header = T)
# Read encodings
encodings <- read.csv("metadata/encodings_100.tsv", sep = "\t", header = T)
figure <- ggplot(data = metadata, aes(x=(eval(parse(text = "date")) %>% gsub(pattern = "-.*", replacement = "") %>% as.numeric()))) +
geom_histogram(binwidth = 1) +
theme_bw() +
xlab("Date")
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = "Figures/metadata/date.png", width=18, height=12, units = 'cm', dpi=300)
for (column in encodings$name[encodings$encoding=="cont" & !is.na(encodings$encoding)]) {
options(scipen=3)
figure <- ggplot(data = metadata, aes(x=(eval(parse(text = column))))) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$",column)))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", column, ".png"), width=18, height=12, units = 'cm', dpi=300)
}
for (column in encodings$name[encodings$encoding=="contbin" & !is.na(encodings$encoding)]) {
figure <- ggplot(data = metadata[(eval(parse(text = paste0("metadata$`",column, "`"))))!=0,], aes(x=(eval(parse(text = paste0("metadata$`",column, "`"))))[(eval(parse(text = paste0("metadata$`",column, "`"))))!=0])) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
", Proportion Zero: ",
format(round(mean(eval(parse(text = paste0("metadata$`",column, "`")))==0, na.rm = T), 3), nsmall = 3),
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$`",column, "`")))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", gsub(" \\(.*", "", column), ".png"), width=18, height=12, units = 'cm', dpi=300)
}
for (column in encodings$name[encodings$encoding=="bicontbin" & !is.na(encodings$encoding)]) {
xy <- str_split(metadata[,column][metadata[,column]!="0" & !is.na(metadata[,column])], " , ", simplify = TRUE)
xy <- data.frame(matrix(as.numeric(xy), ncol = ncol(xy)))
colnames(xy) <- c("Concentration", "Value")
figure <- ggplot(data = xy, aes(x=Concentration)) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
" concentration, Proportion Zero: ",
format(round(mean(eval(parse(text = paste0("metadata$`",column, "`")))==0, na.rm = T), 3), nsmall = 3),
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$`",column, "`")))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", gsub(" \\(.*", "", column), "_concentration.png"), width=18, height=12, units = 'cm', dpi=300)
figure <- ggplot(data = xy, aes(x=Value)) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
" value, Proportion Zero: ",
format(round(mean(eval(parse(text = paste0("metadata$`",column, "`")))==0, na.rm = T), 3), nsmall = 3),
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$`",column, "`")))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", gsub(" \\(.*", "", column), "_value.png"), width=18, height=12, units = 'cm', dpi=300)
}
library(dplyr)
library(stringr)
library(data.table)
library(ggplot2)
# Read metadata
metadata <- read.csv("metadata/metadata_parsed_100.tsv", sep = "\t", check.names = F, header = T)
# Read encodings
encodings <- read.csv("metadata/encodings_100.tsv", sep = "\t", header = T)
figure <- ggplot(data = metadata, aes(x=(eval(parse(text = "date")) %>% gsub(pattern = "-.*", replacement = "") %>% as.numeric()))) +
geom_histogram(binwidth = 1) +
theme_bw() +
xlab("Date")
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = "Figures/metadata/date.png", width=18, height=12, units = 'cm', dpi=300)
for (column in encodings$name[encodings$encoding=="cont" & !is.na(encodings$encoding)]) {
options(scipen=3)
figure <- ggplot(data = metadata, aes(x=(eval(parse(text = column))))) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$",column)))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", column, ".png"), width=18, height=12, units = 'cm', dpi=300)
}
for (column in encodings$name[encodings$encoding=="contbin" & !is.na(encodings$encoding)]) {
figure <- ggplot(data = metadata[(eval(parse(text = paste0("metadata$`",column, "`"))))!=0,], aes(x=(eval(parse(text = paste0("metadata$`",column, "`"))))[(eval(parse(text = paste0("metadata$`",column, "`"))))!=0])) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
", Proportion Zero: ",
format(round(mean(eval(parse(text = paste0("metadata$`",column, "`")))==0, na.rm = T), 3), nsmall = 3),
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$`",column, "`")))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", gsub(" \\(.*", "", column), ".png"), width=18, height=12, units = 'cm', dpi=300)
}
for (column in encodings$name[encodings$encoding=="bicontbin" & !is.na(encodings$encoding)]) {
xy <- str_split(metadata[,column][metadata[,column]!="0" & !is.na(metadata[,column])], " , ", simplify = TRUE)
xy <- data.frame(matrix(as.numeric(xy), ncol = ncol(xy)))
colnames(xy) <- c("Concentration", "Value")
figure <- ggplot(data = xy, aes(x=Concentration)) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
" concentration, Proportion Zero: ",
format(round(mean(eval(parse(text = paste0("metadata$`",column, "`")))==0, na.rm = T), 3), nsmall = 3),
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$`",column, "`")))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", gsub(" \\(.*", "", column), "_concentration.png"), width=18, height=12, units = 'cm', dpi=300)
figure <- ggplot(data = xy, aes(x=Value)) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
" value, Proportion Zero: ",
format(round(mean(eval(parse(text = paste0("metadata$`",column, "`")))==0, na.rm = T), 3), nsmall = 3),
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$`",column, "`")))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", gsub(" \\(.*", "", column), "_value.png"), width=18, height=12, units = 'cm', dpi=300)
}
library(dplyr)
library(stringr)
library(data.table)
library(ggplot2)
# Read metadata
metadata <- read.csv("metadata/metadata_parsed_100.tsv", sep = "\t", check.names = F, header = T)
# Read encodings
encodings <- read.csv("metadata/encodings_100.tsv", sep = "\t", header = T)
figure <- ggplot(data = metadata, aes(x=(eval(parse(text = "date")) %>% gsub(pattern = "-.*", replacement = "") %>% as.numeric()))) +
geom_histogram(binwidth = 1) +
theme_bw() +
xlab("Date")
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = "Figures/metadata/date.png", width=18, height=12, units = 'cm', dpi=300)
for (column in encodings$name[encodings$encoding=="cont" & !is.na(encodings$encoding)]) {
options(scipen=3)
figure <- ggplot(data = metadata, aes(x=(eval(parse(text = column))))) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$",column)))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", column, ".png"), width=18, height=12, units = 'cm', dpi=300)
}
for (column in encodings$name[encodings$encoding=="contbin" & !is.na(encodings$encoding)]) {
figure <- ggplot(data = metadata[(eval(parse(text = paste0("metadata$`",column, "`"))))!=0,], aes(x=(eval(parse(text = paste0("metadata$`",column, "`"))))[(eval(parse(text = paste0("metadata$`",column, "`"))))!=0])) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
", Proportion Zero: ",
format(round(mean(eval(parse(text = paste0("metadata$`",column, "`")))==0, na.rm = T), 3), nsmall = 3),
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$`",column, "`")))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", gsub(" \\(.*", "", column), ".png"), width=18, height=12, units = 'cm', dpi=300)
}
for (column in encodings$name[encodings$encoding=="bicontbin" & !is.na(encodings$encoding)]) {
xy <- str_split(metadata[,column][metadata[,column]!="0" & !is.na(metadata[,column])], " , ", simplify = TRUE)
xy <- data.frame(matrix(as.numeric(xy), ncol = ncol(xy)))
colnames(xy) <- c("Concentration", "Value")
figure <- ggplot(data = xy, aes(x=Concentration)) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
" concentration, Proportion Zero: ",
format(round(mean(eval(parse(text = paste0("metadata$`",column, "`")))==0, na.rm = T), 3), nsmall = 3),
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$`",column, "`")))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", gsub(" \\(.*", "", column), "_concentration.png"), width=18, height=12, units = 'cm', dpi=300)
figure <- ggplot(data = xy, aes(x=Value)) +
geom_histogram(bins = 50) +
theme_bw() +
xlab(paste0(column,
" value, Proportion Zero: ",
format(round(mean(eval(parse(text = paste0("metadata$`",column, "`")))==0, na.rm = T), 3), nsmall = 3),
", Proportion NA: ",
format(round(mean(is.na(eval(parse(text = paste0("metadata$`",column, "`")))), na.rm = T), 3), nsmall = 3)
))
dir.create(file.path("Figures/metadata"), showWarnings = FALSE, recursive = T)
ggsave(plot = figure, filename = paste0("Figures/metadata/", gsub(" \\(.*", "", column), "_value.png"), width=18, height=12, units = 'cm', dpi=300)
}
